\documentclass[letterpaper,12pt]{article}
\usepackage[top=1in,bottom=1in,left=1in,right=1in]{geometry}
\usepackage{setspace}
\usepackage[colorlinks=true,urlcolor=blue,citecolor=blue,linkcolor=blue]{hyperref}
\usepackage{indentfirst}
\usepackage{multirow}
\usepackage{booktabs}
\usepackage[final]{animate}
\usepackage{graphicx}
\usepackage{verbatim}
\usepackage{rotating}
\usepackage{tabularx}
\usepackage{array}
\usepackage{subfig} 
\usepackage[noae]{Sweave}
\usepackage{cleveref}
\usepackage[figureposition=bottom]{caption}
\usepackage{paralist}
\usepackage{acronym}
\usepackage{outlines}
\usepackage{pdflscape}

% knitr options
<<setup, echo = FALSE, cache = F>>=
library(knitr)
# set global chunk options
opts_chunk$set(fig.path = 'figs/', fig.align = 'center', fig.show = 'hold', message = F, dev = c('pdf', 'tiff'), dev.args = list(pdf = list(family = 'serif'), tiff = list(compression = 'lzw', family = 'serif')), dpi = 600, fig.pos = '!ht', warning = F, tangle = TRUE, cache = TRUE)
options(replace.assign = TRUE, width = 75)
@

% housekeeping
<<echo = F, message = F, results = F, cache = F>>=
library(ggplot2)
library(RColorBrewer)
library(tidyr)
library(vegan)
library(gridExtra)
library(FactoMineR)
library(ggord)
library(Hmisc)
library(dplyr)
library(ggmap)
library(ggrepel)

source('R/funcs.R')
@

\linespread{1}

\begin{document}
\title{Analysis of 16S microbial sequencing data from a Southern Califoria WWTP discharge fields}
\maketitle

<<echo = F, message = F, warning = F, fig.width = 6, fig.height = 6>>=
data(dists)

# LA sites
toplo1 <- filter(dists, !wwtp %in% 'SDCI')
bbx <- make_bbox(lon = longitude, lat = latitude, data = toplo1, f = 0.2)
bsmap <- ggmap::get_map(
    location = bbx,
    source = 'google',
    messaging = FALSE
    )

ggmap(bsmap) + 
  geom_point(data = toplo1, aes(x = longitude, y = latitude, colour = wwtp), size = 2) + 
  geom_label_repel(data = toplo1, aes(x = longitude, y = latitude, label = site, colour = wwtp),
    point.padding = grid::unit(0, "lines"), 
    min.segment.length = grid::unit(0, 'lines'), 
    box.padding = grid::unit(1, 'lines')
  )

# San Diego sites
toplo2 <- filter(dists, wwtp %in% 'SDCI')

bbx <- make_bbox(lon = longitude, lat = latitude, data = toplo2, f = 10)
bsmap <- ggmap::get_map(
    location = bbx,
    source = 'google',
    messaging = FALSE
    )

ggmap(bsmap) + 
  geom_point(data = toplo2, aes(x = longitude, y = latitude, colour = wwtp), size = 2) + 
  geom_label_repel(data = toplo2, aes(x = longitude, y = latitude, label = site, colour = wwtp),
    point.padding = grid::unit(0, "lines"), 
    min.segment.length = grid::unit(0, 'lines'), 
    box.padding = grid::unit(1, 'lines')
  )
@

<<cache = F>>=
load(file = 'data/abudat.RData')
lapply(abudat, head)
@

\section{Community structure}
 
<<abundall, fig.cap='Top fifty most abundant species across all study sites.', echo = F, fig.height = 4, fig.width =7, out.width = '0.8\\textwidth'>>=

# get species
sppdat <- abudat$SPECIES

# most abundant species, all sites
toplo1 <- group_by(sppdat, species) %>% 
  summarise(abund = sum(abund)) %>% 
  arrange(-abund) %>% 
  .[1:10, ] %>% 
  mutate(species = factor(species, levels = species))

p1 <- ggplot(toplo1, aes(x = species, y = abund, fill = abund)) + 
  geom_bar(stat = 'identity', colour = 'black') + 
  # scale_y_log10() + 
  ylab('Abundance') + 
  theme_bw() + 
  scale_fill_gradientn(colours = brewer.pal(9, 'RdPu')) +
  theme(legend.position = "none", axis.title.x = element_blank(), 
        axis.text.x = element_text(size = 10, angle = 90, hjust = 1, 
                                   vjust = 0))
p1
@

<<abundmuni, fig.cap='Species abundances by municipal locations using the top fifty most abundant across all study sites in \\cref{fig:abundall}.', echo = F, fig.height = 5, fig.width = 8, out.width = '0.8\\textwidth'>>=
# most abundant species by muni
toplo2 <- filter(sppdat, species %in% toplo1$species) %>% 
  group_by(species, wwtp) %>% 
  summarise(abund = sum(abund)) %>% 
  ungroup %>% 
  mutate(
    wwtp = factor(wwtp, levels = c('LACI', 'SDCI','LACO', 'ORCO'), 
      labels = c('City of LA', 'City of San Diego', 'LA County', 'Orange County')), 
    species = factor(species, levels = levels(toplo1$species))
  )

p2 <- ggplot(toplo2, aes(x = species, y = abund, fill = abund)) + 
  geom_bar(stat = 'identity', colour = 'black') + 
  # scale_y_log10() + 
  ylab('Abundance') + 
  facet_wrap(~wwtp) + 
  theme_bw() + 
  scale_fill_gradientn(colours = brewer.pal(9, 'RdPu')) +
  theme(legend.position = "none", axis.title.x = element_blank(), 
        axis.text.x = element_text(size = 11, angle = 90, hjust = 1, 
                                   vjust = 0))
p2
@
\clearpage

<<abundcont, fig.cap='Species abundances by distance from pipe for the top fifty most abundant across all study sites in \\cref{fig:abundall}.  Treatments are based on relative distances from an outflow pipe (farthest, intermediate, closest) for each municipality.', echo = F, fig.height = 4, fig.width = 8, out.width = '0.8\\textwidth'>>=
toplo3 <- filter(sppdat, species %in% toplo1$species) %>% 
  group_by(species, cont) %>% 
  summarise(abund = sum(abund)) %>% 
  ungroup %>% 
  mutate(
    cont = factor(cont, levels = c('far', 'int', 'clo'), 
      labels = c('Farthest', 'Intermediate', 'Closest')),
    species = factor(species, levels = levels(toplo1$species))
  )

p3 <- ggplot(toplo3, aes(x = species, y = abund, fill = abund)) + 
  geom_bar(stat = 'identity', colour = 'black') + 
  # scale_y_log10() + 
  ylab('Abundance') + 
  facet_wrap(~cont) + 
  theme_bw() + 
  scale_fill_gradientn(colours = brewer.pal(9, 'RdPu')) +
  theme(legend.position = "none", axis.title.x = element_blank(), 
        axis.text.x = element_text(size = 11, angle = 90, hjust = 1, 
                                   vjust = 0))
p3
@
\clearpage

\begin{landscape}
\centering\vspace*{\fill}
<<abundsite, fig.cap='Species abundances by sites using the top fifty most abundant across all study sites in \\cref{fig:abundall}.', echo = F, fig.height = 8, fig.width = 12, out.width = '1.1\\textwidth'>>=
# most abundant species, all sites
toplo4 <- filter(sppdat, species %in% toplo1$species) %>% 
  group_by(species, site) %>% 
  summarise(abund = sum(abund)) %>% 
  ungroup %>% 
  mutate(
    site = factor(site, levels = paste0('CA', c(1, 2, 3, 4, 7, 8, 9, 11, 5, 10, 12, 6, 13, 14))),
    species = factor(species, levels = levels(toplo1$species))
  )

p4 <- ggplot(toplo4, aes(x = species, y = abund, fill = abund)) + 
  geom_bar(stat = 'identity', colour = 'black') + 
  # scale_y_log10() + 
  ylab('Abundance') + 
  facet_wrap(~site) + 
  theme_bw() + 
  scale_fill_gradientn(colours = brewer.pal(9, 'RdPu')) +
  theme(legend.position = "none", axis.title.x = element_blank(), 
        axis.text.x = element_text(size = 11, angle = 90, hjust = 1, 
                                   vjust = 0))
p4
@
\end{landscape}
\clearpage

\subsection{Multivariate analyses with archaea}

<<clust1_arch, fig.cap = "Site clusters of archaea by taxonomic resolution.  Colors indicate municipality and superscripts indicate distance categories from an outflow pipe at each site (`f' is farthest, `c' is closest, none is intermediate).  Clustering was based on a Bray-Curtis dissimilarity matrix of abundance data and sorting using the unweighted pair group method.", out.width = '\\textwidth', fig.height = 8, fig.width = 8, echo = F>>=
# vegan approach

library(dendextend)
library(ggdendro)

archdat <- lapply(abudat, function(x) filter(x, domain == 'Archaea'))

# base ggplot 
pbase <- ggplot() +
  coord_flip() +
  scale_y_reverse('Distance', expand=c(0.2, 0), limits = c(0.85, 0)) +
  scale_colour_brewer(palette = "Set1") +
  theme(
    panel.background = element_blank(), 
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    panel.border = element_blank(),
    axis.text.y = element_blank(), 
    axis.title.x = element_blank(),
    axis.title.y = element_blank(), 
    axis.ticks.y = element_blank(), 
    legend.position = 'top', 
    legend.title = element_blank(),
    legend.key = element_blank()
    )

levs <- names(archdat)[-1]
for(lev in levs){
  
  dat <- archdat[[lev]]
  names(dat)[1] <- 'level'
  dat <- select(dat, level, site, wwtp, cont, abund)
  dat <- spread(dat, level, abund, fill = 0) %>% 
    as.data.frame(stringAsFactors = F)
  row.names(dat) <- dat$site
  
  # clusts using all data
  # log transform for zeroes
  # create distance matrix
  datall <- select(dat, -site, -wwtp, -cont) %>% 
    decostand(method = 'log') %>% 
    vegdist(method = 'bray') %>% 
    hclust(method = 'average')

  hcdata <- dendro_data(datall, type="rectangle")

  labs <- select(dat, site, wwtp, cont)
  hcdata$labels <- merge(x = hcdata$labels, y = labs,  by.x = 'label', by.y = 'site')
  far <- grep('far', hcdata$labels$cont)
  clo <- grep('clo', hcdata$labels$cont)
  hcdata$labels$label <- as.character(hcdata$labels$label)
  hcdata$labels$label[far] <- paste0(hcdata$labels$label[far], '^f')
  hcdata$labels$label[clo] <- paste0(hcdata$labels$label[clo], '^c')
  hcdata$labels$wwtp <- factor(hcdata$labels$wwtp, levels = c('LACI', 'SDCI', 'LACO', 'ORCO'), 
    labels = c('City of LA', 'City of San Diego', 'LA County', 'Orange County')
  )

  p <- pbase + 
    guides(color = guide_legend(title = 'Municipality')) +
    geom_segment(data=segment(hcdata), aes(x=x, y=y, xend=xend, yend=yend)) +
    geom_text(data = hcdata$labels, aes(x=x, y=y, label=label, colour = wwtp, hjust=0), size=4, parse = T) + 
    ggtitle(tolower(lev))

  pleg <- g_legend(p)
  p <- p + theme(legend.position = 'none')
  assign(paste0('p', lev), p)
  
}

grid.arrange(
  pleg,
  arrangeGrob(pPHYLUM, pCLASS, pORDER, pFAMILY, pGENUS, pSPECIES, ncol = 2), 
  ncol = 1, 
  heights = c(0.05, 1)
)

@

<<ord1_arch, fig.cap = 'Site ordinations of archaea by taxonomic resolution.  Colors indicate municipality with ellipses showing 95\\% bivariate confidence intervals.  Ordinations were created using Nonmetric Multidimensional scaling with several random starts to find a stable solution of the configuration.  A Bray-Curtis dissimilarity matrix was used as a measure of differences between sites. The ordination is the same as in \\cref{fig:ord2_arch} but with different group categories in the plot.', out.width = '\\textwidth', fig.height = 9, fig.width = 9, echo = F>>=
# vegan approach

levs <- names(archdat)[-1]
for(lev in levs){
  
  dat <- archdat[[lev]]
  names(dat)[1] <- 'level'
  dat <- select(dat, level, site, wwtp, cont, abund)
  dat <- spread(dat, level, abund, fill = 0) %>% 
    as.data.frame(stringAsFactors = F)
  row.names(dat) <- dat$site
  dat$wwtp <- factor(dat$wwtp, levels = c('LACI', 'SDCI', 'LACO', 'ORCO'), 
    labels = c('City of LA', 'City of San Diego', 'LA County', 'Orange County')
  )
  
  # clusts using all data
  # log transform for zeroes
  # create distance matrix
  datall <- select(dat, -site, -wwtp, -cont) %>% 
    decostand(method = 'log') %>% 
    metaMDS(distance = 'bray', trace = 0, autotransform = F, k = 2)
  
  p <- ggord(datall, dat$wwtp, axes = c("1", "2"), arrow = NULL, txt = NULL, size = 4, obslab = T, poly = F, ellipse_pro = 0.9) +
    scale_colour_brewer(palette = "Set1") +
    theme(legend.position = 'top', legend.title = element_blank()) + 
    ggtitle(tolower(lev)) +
    scale_x_continuous('MDS1') +
    scale_y_continuous('MDS2')

  pleg <- g_legend(p)
  p <- p + theme(legend.position = 'none')
  assign(paste0('p', lev), p)
  
}

grid.arrange(
  pleg,
  arrangeGrob(pPHYLUM, pCLASS, pORDER, pFAMILY, pGENUS, pSPECIES, ncol = 2), 
  ncol = 1, 
  heights = c(0.05, 1)
)

@

<<ord2_arch, fig.cap = 'Site ordinations of archaea by taxonomic resolution.  Colors indicate approximate distance from pipe with ellipses showing 95\\% bivariate confidence intervals. Ordinations were created using Nonmetric Multidimensional scaling with several random starts to find a stable solution of the configuration.  A Bray-Curtis dissimilarity matrix was used as a measure of differences between sites. The ordination is the same as in \\cref{fig:ord1_arch} but with different group categories in the plot.', out.width = '1.05\\textwidth', fig.height = 9, fig.width = 9, echo = F>>=
# vegan approach

levs <- names(archdat)[-1]
for(lev in levs){
  
  dat <- archdat[[lev]]
  names(dat)[1] <- 'level'
  dat <- select(dat, level, site, wwtp, cont, abund)
  dat <- spread(dat, level, abund, fill = 0) %>% 
    as.data.frame(stringAsFactors = F)
  row.names(dat) <- dat$site
  dat$cont <- factor(dat$cont, levels = c('far', 'int', 'clo'), 
    labels = c('Farthest', 'Intermediate', 'Closest')
  )
  
  # clusts using all data
  # log transform for zeroes
  # create distance matrix
  datall <- select(dat, -site, -wwtp, -cont) %>% 
    decostand(method = 'log') %>% 
    metaMDS(distance = 'bray', trace = 0, autotransform = F, k = 2)
  
  p <- ggord(datall, dat$cont, axes = c("1", "2"), arrow = NULL, txt = NULL, size = 4, obslab = T, poly = F, ellipse_pro = 0.9) +
    scale_colour_brewer(palette = "Set1") +
    theme(legend.position = 'top', legend.title = element_blank()) + 
    ggtitle(tolower(lev)) +
    scale_x_continuous('MDS1') + 
    scale_y_continuous('MDS2') 

  pleg <- g_legend(p)
  p <- p + theme(legend.position = 'none')
  assign(paste0('p', lev), p)
  
}

grid.arrange(
  pleg,
  arrangeGrob(pPHYLUM, pCLASS, pORDER, pFAMILY, pGENUS, pSPECIES, ncol = 2), 
  ncol = 1, 
  heights = c(0.05, 1)
)

@
\clearpage

<<eval = T, echo = F, results = 'asis'>>=
# simple diversity measures
# alpha diversity at each site, beta diversity between sites
# https://cran.r-project.org/web/packages/vegan/vignettes/diversity-vegan.pdf

levs <- names(archdat)[-1]
alphs <- betas <- vector('list', length = length(levs))
names(alphs) <- names(betas) <- levs
for(lev in levs){
  
  dat <- archdat[[lev]]
  names(dat)[1] <- 'level'
  dat <- select(dat, level, site, wwtp, cont, abund)

  # agg by wwtp
  dat_wwtp <- group_by(dat, level, wwtp) %>% 
    summarise(abund = sum(abund)) %>% 
    spread(level, abund, fill = 0) %>% 
    as.data.frame(stringAsFactors = F)
  row.names(dat_wwtp) <- dat_wwtp$wwtp
  dat_wwtp <- select(dat_wwtp, -wwtp)
  
  # agg by cont
  dat_cont <- group_by(dat, level, cont) %>% 
    summarise(abund = sum(abund)) %>% 
    spread(level, abund, fill = 0) %>% 
    as.data.frame(stringAsFactors = F)
  row.names(dat_cont) <- dat_cont$cont
  dat_cont <- select(dat_cont, -cont)
  
  # site level
  dat_site <- spread(dat, level, abund, fill = 0) %>% 
    as.data.frame(stringAsFactors = F)
  row.names(dat_site) <- dat_site$site
  dat_site <- select(dat_site, -site, -wwtp, -cont)
  
  alph_wwtp <- fisher.alpha(dat_wwtp)
  alph_cont <- fisher.alpha(dat_cont)
  alph_site <- fisher.alpha(dat_site)
  
  alphs[[lev]] <- c(alph_wwtp, alph_cont, alph_site)

  beta_wwtp <- ncol(dat_wwtp)/mean(specnumber(dat_wwtp)) - 1
  beta_cont <- ncol(dat_cont)/mean(specnumber(dat_cont)) - 1
  beta_site <- ncol(dat_site)/mean(specnumber(dat_site)) - 1
  beta_out <- c(beta_wwtp, beta_cont, beta_site)
  names(beta_out) <- c('wwtp', 'cont', 'site')
  betas[[lev]] <- beta_out
  
}

##
# arrange alpha diversity for table

tmpa <- do.call('rbind', alphs) %>% 
  data.frame
tmpa$level <- factor(row.names(tmpa), 
  levels = c('PHYLUM', 'CLASS', 'ORDER', 'FAMILY', 'GENUS', 'SPECIES'),
  labels = c('Phylum', 'Class', 'Order', 'Family', 'Genus', 'Species')
)

tmpa <- gather(tmpa, 'grouping', 'alphs', -level) %>% 
  spread(level, alphs) %>% 
  mutate(grouping = factor(grouping, 
    levels = c('LACI', 'SDCI', 'LACO', 'ORCO', 'far', 'int', 'clo', paste0('CA', c(1, 2, 3, 4, 7, 8, 9, 11, 5, 10, 12, 6, 13, 14))), 
    labels = c('City of LA', 'City of San Diego', 'LA County', 'Orange County', 'Farthest', 'Intermediate', 'Closest', paste0('CA', c(1, 2, 3, 4, 7, 8, 9, 11, 5, 10, 12, 6, 13, 14)))
    )
  ) %>% 
  arrange(grouping)

# latex table
taba <- form_fun(tmpa[, -1])
rows <- tmpa[, 1]
cap.val<-'Alpha diversity of archaea by municipality, distance from outflow, and sites for each taxonomic level.  Original data were taxanomic abundance aggregated by each grouping.  Alpha was was based on methods in Fisher et al. (1943) that measure diversity as a function of richness and abundance at a site.'

latex( 
  taba,
  file = '',
  rowlabel = 'Location grouping',
  caption = cap.val,
  caption.loc = 'top',
  rgroup = c('Municipality', 'Pipe location', 'Site'),
  n.rgroup = c(4, 3, 14),
  rowname = rows,
  label = 'tab:alpha_arch'
  )

##
# arrange beta diversity for table
tmpb <- do.call('rbind', betas) %>% 
  data.frame 
tmpb$level <- factor(row.names(tmpb),
  levels = c('PHYLUM', 'CLASS', 'ORDER', 'FAMILY', 'GENUS', 'SPECIES'),
  labels = c('Phylum', 'Class', 'Order', 'Family', 'Genus', 'Species')
  )

tmpb <- gather(tmpb, 'grouping', 'beta', -level) %>% 
  spread(level, beta) %>% 
  mutate(grouping = factor(grouping, levels = c('wwtp', 'cont', 'site'), 
    labels = c('Municipality', 'Distance from outflow', 'Site')
  ))

tabb <- form_fun(tmpb[, -1])
rows <- as.character(tmpb[, 1])
cap.val<-'Beta diversity of archaea between municipalities, distance categories from outflow, and sites for each taxonomic level.  Original data were taxonomic abundance aggregated by each grouping.  Beta was estimated as total species richness across all categories in each grouping, divided by mean species richness within each category, minus one.'

latex( 
  tabb,
  file = '',
  rowlabel = 'Location grouping',
  caption = cap.val,
  caption.loc = 'top',
  rowname = rows,
  label = 'tab:beta_arch'
  )

@

\subsection{Multivariate analyses with bacteria}

<<clust1_bac, fig.cap = "Site clusters of bacteria by taxonomic resolution.  Colors indicate municipality and superscripts indicate distance categories from an outflow pipe at each site (`f' is farthest, `c' is closest, none is intermediate).  Clustering was based on a Bray-Curtis dissimilarity matrix of abundance data and sorting using the unweighted pair group method.", out.width = '\\textwidth', fig.height = 8, fig.width = 8, echo = F>>=
# vegan approach

library(dendextend)
library(ggdendro)

bacdat <- lapply(abudat, function(x) filter(x, domain == 'Bacteria'))

# base ggplot 
pbase <- ggplot() +
  coord_flip() +
  scale_y_reverse('Distance', expand=c(0.2, 0), limits = c(0.65, 0)) +
  scale_colour_brewer(palette = "Set1") +
  theme(
    panel.background = element_blank(), 
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    panel.border = element_blank(),
    axis.text.y = element_blank(), 
    axis.title.x = element_blank(),
    axis.title.y = element_blank(), 
    axis.ticks.y = element_blank(), 
    legend.position = 'top', 
    legend.title = element_blank(),
    legend.key = element_blank()
    )

levs <- names(bacdat)[-1]
for(lev in levs){
  
  dat <- bacdat[[lev]]
  names(dat)[1] <- 'level'
  dat <- select(dat, level, site, wwtp, cont, abund)
  dat <- spread(dat, level, abund, fill = 0) %>% 
    as.data.frame(stringAsFactors = F)
  row.names(dat) <- dat$site
  
  # clusts using all data
  # log transform for zeroes
  # create distance matrix
  datall <- select(dat, -site, -wwtp, -cont) %>% 
    decostand(method = 'log') %>% 
    vegdist(method = 'bray') %>% 
    hclust(method = 'average')

  hcdata <- dendro_data(datall, type="rectangle")

  labs <- select(dat, site, wwtp, cont)
  hcdata$labels <- merge(x = hcdata$labels, y = labs,  by.x = 'label', by.y = 'site')
  far <- grep('far', hcdata$labels$cont)
  clo <- grep('clo', hcdata$labels$cont)
  hcdata$labels$label <- as.character(hcdata$labels$label)
  hcdata$labels$label[far] <- paste0(hcdata$labels$label[far], '^f')
  hcdata$labels$label[clo] <- paste0(hcdata$labels$label[clo], '^c')
  hcdata$labels$wwtp <- factor(hcdata$labels$wwtp, levels = c('LACI', 'SDCI', 'LACO', 'ORCO'), 
    labels = c('City of LA', 'City of San Diego', 'LA County', 'Orange County')
  )

  p <- pbase + 
    guides(color = guide_legend(title = 'Municipality')) +
    geom_segment(data=segment(hcdata), aes(x=x, y=y, xend=xend, yend=yend)) +
    geom_text(data = hcdata$labels, aes(x=x, y=y, label=label, colour = wwtp, hjust=0), size=4, parse = T) + 
    ggtitle(tolower(lev))

  pleg <- g_legend(p)
  p <- p + theme(legend.position = 'none')
  assign(paste0('p', lev), p)
  
}

grid.arrange(
  pleg,
  arrangeGrob(pPHYLUM, pCLASS, pORDER, pFAMILY, pGENUS, pSPECIES, ncol = 2), 
  ncol = 1, 
  heights = c(0.05, 1)
)

@

<<ord1_bac, fig.cap = 'Site ordinations of bacteria by taxonomic resolution.  Colors indicate municipality with ellipses showing 95\\% bivariate confidence intervals.  Ordinations were created using Nonmetric Multidimensional scaling with several random starts to find a stable solution of the configuration.  A Bray-Curtis dissimilarity matrix was used as a measure of differences between sites. The ordination is the same as in \\cref{fig:ord2_bac} but with different group categories in the plot.', out.width = '\\textwidth', fig.height = 9, fig.width = 9, echo = F>>=
# vegan approach

levs <- names(bacdat)[-1]
for(lev in levs){
  
  dat <- bacdat[[lev]]
  names(dat)[1] <- 'level'
  dat <- select(dat, level, site, wwtp, cont, abund)
  dat <- spread(dat, level, abund, fill = 0) %>% 
    as.data.frame(stringAsFactors = F)
  row.names(dat) <- dat$site
  dat$wwtp <- factor(dat$wwtp, levels = c('LACI', 'SDCI', 'LACO', 'ORCO'), 
    labels = c('City of LA', 'City of San Diego', 'LA County', 'Orange County')
  )
  
  # clusts using all data
  # log transform for zeroes
  # create distance matrix
  datall <- select(dat, -site, -wwtp, -cont) %>% 
    decostand(method = 'log') %>% 
    metaMDS(distance = 'bray', trace = 0, autotransform = F, k = 2)
  
  p <- ggord(datall, dat$wwtp, axes = c("1", "2"), arrow = NULL, txt = NULL, size = 4, obslab = T, poly = F, ellipse_pro = 0.9) +
    scale_colour_brewer(palette = "Set1") +
    theme(legend.position = 'top', legend.title = element_blank()) + 
    ggtitle(tolower(lev)) +
    scale_x_continuous('MDS1') + 
    scale_y_continuous('MDS2')

  pleg <- g_legend(p)
  p <- p + theme(legend.position = 'none')
  assign(paste0('p', lev), p)
  
}

grid.arrange(
  pleg,
  arrangeGrob(pPHYLUM, pCLASS, pORDER, pFAMILY, pGENUS, pSPECIES, ncol = 2), 
  ncol = 1, 
  heights = c(0.05, 1)
)

@

<<ord2_bac, fig.cap = 'Site ordinations of bacteria by taxonomic resolution.  Colors indicate approximate distance from pipe with ellipses showing 95\\% bivariate confidence intervals. Ordinations were created using Nonmetric Multidimensional scaling with several random starts to find a stable solution of the configuration.  A Bray-Curtis dissimilarity matrix was used as a measure of differences between sites. The ordination is the same as in \\cref{fig:ord1_bac} but with different group categories in the plot.', out.width = '1.05\\textwidth', fig.height = 9, fig.width = 9, echo = F>>=
# vegan approach

levs <- names(bacdat)[-1]
for(lev in levs){
  
  dat <- bacdat[[lev]]
  names(dat)[1] <- 'level'
  dat <- select(dat, level, site, wwtp, cont, abund)
  dat <- spread(dat, level, abund, fill = 0) %>% 
    as.data.frame(stringAsFactors = F)
  row.names(dat) <- dat$site
  dat$cont <- factor(dat$cont, levels = c('far', 'int', 'clo'), 
    labels = c('Farthest', 'Intermediate', 'Closest')
  )
  
  # clusts using all data
  # log transform for zeroes
  # create distance matrix
  datall <- select(dat, -site, -wwtp, -cont) %>% 
    decostand(method = 'log') %>% 
    metaMDS(distance = 'bray', trace = 0, autotransform = F, k = 2)
  
  p <- ggord(datall, dat$cont, axes = c("1", "2"), arrow = NULL, txt = NULL, size = 4, obslab = T, poly = F, ellipse_pro = 0.9) +
    scale_colour_brewer(palette = "Set1") +
    theme(legend.position = 'top', legend.title = element_blank()) + 
    ggtitle(tolower(lev)) +
    scale_x_continuous('MDS1') +
    scale_y_continuous('MDS2')

  pleg <- g_legend(p)
  p <- p + theme(legend.position = 'none')
  assign(paste0('p', lev), p)
  
}

grid.arrange(
  pleg,
  arrangeGrob(pPHYLUM, pCLASS, pORDER, pFAMILY, pGENUS, pSPECIES, ncol = 2), 
  ncol = 1, 
  heights = c(0.05, 1)
)

@
\clearpage

<<eval = T, echo = F, results = 'asis'>>=
# simple diversity measures
# alpha diversity at each site, beta diversity between sites
# https://cran.r-project.org/web/packages/vegan/vignettes/diversity-vegan.pdf

levs <- names(bacdat)[-1]
alphs <- betas <- vector('list', length = length(levs))
names(alphs) <- names(betas) <- levs
for(lev in levs){
  
  dat <- bacdat[[lev]]
  names(dat)[1] <- 'level'
  dat <- select(dat, level, site, wwtp, cont, abund)

  # agg by wwtp
  dat_wwtp <- group_by(dat, level, wwtp) %>% 
    summarise(abund = sum(abund)) %>% 
    spread(level, abund, fill = 0) %>% 
    as.data.frame(stringAsFactors = F)
  row.names(dat_wwtp) <- dat_wwtp$wwtp
  dat_wwtp <- select(dat_wwtp, -wwtp)
  
  # agg by cont
  dat_cont <- group_by(dat, level, cont) %>% 
    summarise(abund = sum(abund)) %>% 
    spread(level, abund, fill = 0) %>% 
    data.frame(., stringsAsFactors = F)
  row.names(dat_cont) <- dat_cont$cont
  dat_cont <- select(dat_cont, -cont)
  
  # site level
  dat_site <- spread(dat, level, abund, fill = 0) %>% 
    data.frame(., stringsAsFactors = F)
  row.names(dat_site) <- dat_site$site
  dat_site <- select(dat_site, -site, -wwtp, -cont)
  
  alph_wwtp <- fisher.alpha(dat_wwtp)
  alph_cont <- fisher.alpha(dat_cont)
  alph_site <- fisher.alpha(dat_site)
  
  alphs[[lev]] <- c(alph_wwtp, alph_cont, alph_site)

  beta_wwtp <- ncol(dat_wwtp)/mean(specnumber(dat_wwtp)) - 1
  beta_cont <- ncol(dat_cont)/mean(specnumber(dat_cont)) - 1
  beta_site <- ncol(dat_site)/mean(specnumber(dat_site)) - 1
  beta_out <- c(beta_wwtp, beta_cont, beta_site)
  names(beta_out) <- c('wwtp', 'cont', 'site')
  betas[[lev]] <- beta_out
  
}

##
# arrange alpha diversity for table

tmpa <- do.call('rbind', alphs) %>% 
  data.frame
tmpa$level <- factor(row.names(tmpa), 
  levels = c('PHYLUM', 'CLASS', 'ORDER', 'FAMILY', 'GENUS', 'SPECIES'),
  labels = c('Phylum', 'Class', 'Order', 'Family', 'Genus', 'Species')
)

tmpa <- gather(tmpa, 'grouping', 'alphs', -level) %>% 
  spread(level, alphs) %>% 
  mutate(grouping = factor(grouping, 
    levels = c('LACI', 'SDCI', 'LACO', 'ORCO', 'far', 'int', 'clo', paste0('CA', c(1, 2, 3, 4, 7, 8, 9, 11, 5, 10, 12, 6, 13, 14))), 
    labels = c('City of LA', 'City of San Diego', 'LA County', 'Orange County', 'Farthest', 'Intermediate', 'Closest', paste0('CA', c(1, 2, 3, 4, 7, 8, 9, 11, 5, 10, 12, 6, 13, 14)))
    )
  ) %>% 
  arrange(grouping)

# latex table
taba <- form_fun(tmpa[, -1])
rows <- tmpa[, 1]
cap.val<-'Alpha diversity of bacteria by municipality, distance from outflow, and sites for each taxonomic level.  Original data were taxanomic abundance aggregated by each grouping.  Alpha was was based on methods in Fisher et al. (1943) that measure diversity as a function of richness and abundance at a site.'

latex( 
  taba,
  file = '',
  rowlabel = 'Location grouping',
  caption = cap.val,
  caption.loc = 'top',
  rgroup = c('Municipality', 'Pipe location', 'Site'),
  n.rgroup = c(4, 3, 14),
  rowname = rows,
  label = 'tab:alpha_bac'
  )

##
# arrange beta diversity for table
tmpb <- do.call('rbind', betas) %>% 
  data.frame 
tmpb$level <- factor(row.names(tmpb),
  levels = c('PHYLUM', 'CLASS', 'ORDER', 'FAMILY', 'GENUS', 'SPECIES'),
  labels = c('Phylum', 'Class', 'Order', 'Family', 'Genus', 'Species')
  )

tmpb <- gather(tmpb, 'grouping', 'beta', -level) %>% 
  spread(level, beta) %>% 
  mutate(grouping = factor(grouping, levels = c('wwtp', 'cont', 'site'), 
    labels = c('Municipality', 'Distance from outflow', 'Site')
  ))

tabb <- form_fun(tmpb[, -1])
rows <- as.character(tmpb[, 1])
cap.val<-'Beta diversity of bacteria between municipalities, distance categories from outflow, and sites for each taxonomic level.  Original data were taxonomic abundance aggregated by each grouping.  Beta was estimated as total species richness across all categories in each grouping, divided by mean species richness within each category, minus one.'

latex( 
  tabb,
  file = '',
  rowlabel = 'Location grouping',
  caption = cap.val,
  caption.loc = 'top',
  rowname = rows,
  label = 'tab:beta_bac'
  )

@

\end{document}