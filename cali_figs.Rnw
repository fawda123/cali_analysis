\documentclass[letterpaper,12pt]{article}
\usepackage[top=1in,bottom=1in,left=1in,right=1in]{geometry}
\usepackage{setspace}
\usepackage[colorlinks=true,urlcolor=blue,citecolor=blue,linkcolor=blue]{hyperref}
\usepackage{indentfirst}
\usepackage{multirow}
\usepackage{booktabs}
\usepackage[final]{animate}
\usepackage{graphicx}
\usepackage{verbatim}
\usepackage{rotating}
\usepackage{tabularx}
\usepackage{array}
\usepackage{subfig} 
\usepackage[noae]{Sweave}
\usepackage{cleveref}
\usepackage[figureposition=bottom]{caption}
\usepackage{paralist}
\usepackage{acronym}
\usepackage{outlines}
\usepackage{pdflscape}

% knitr options
<<setup, echo = FALSE, cache = F>>=
library(knitr)
# set global chunk options
opts_chunk$set(fig.path = 'figs/', fig.align = 'center', fig.show = 'hold', message = F, dev = c('pdf', 'tiff'), dev.args = list(pdf = list(family = 'serif'), tiff = list(compression = 'lzw', family = 'serif')), dpi = 600, fig.pos = '!ht', warning = F, tangle = TRUE, cache = TRUE,
   fig.process = function(x) {
    x2 = sub('-\\d+([.][a-z]+)$', '\\1', x)
    if (file.rename(x, x2)) x2 else x}
  )
options(replace.assign = TRUE, width = 75)
@

% housekeeping
<<echo = F, message = F, results = F, cache = F, warning = F>>=
library(tidyverse)
library(RColorBrewer)
library(vegan)
library(gridExtra)
library(FactoMineR)
library(ggord)
library(Hmisc)
library(ggmap)
library(ggrepel)
library(dendextend)
library(ggdendro)
library(vegan)
library(pander)
library(memisc)
library(stringi)
source('R/funcs.R')
@

\linespread{1}

\begin{document}

\begin{figure}
\includegraphics[width = \textwidth]{figs/sites.jpg}
\caption{Sampling stations grouped by municipality and approximate distance from wastewater treatment plant outflow pipes. Distances are close (clo), intermediate (int), and far. Municipalities are city of Los Angeles (LACI), city of San Diego (SDCI), Los Angeles County (LACO), and Orange County (ORCO).} 
\end{figure}

<<cache = F, echo = F>>=
# data processing
load(file = 'data/abudat.RData')
gendat <- abudat$GENUS

# rename site labels
sitlev <- c('CA1', 'CA10', 'CA11', 'CA12', 'CA13', 'CA14', 'CA2', 'CA3', 'CA4', 'CA5', 'CA6', 'CA7', 'CA8', 'CA9')
citlab <- c('LACO', 'ORCO', 'SDCI', 'ORCO', 'LACI', 'LACI', 'LACO', 'LACO', 'LACO', 'ORCO', 'LACI', 'SDCI', 'SDCI', 'SDCI')
cntlab <- c('i', 'i', 'i', 'c', 'f', 'i', 'c', 'i2', 'f', 'f', 'c', 'c', 'f', 'i2')
cntlab <- paste0('[', toupper(cntlab), ']')
sitlab <- paste(citlab, cntlab)
sitexp <- paste0('expression(', sitlab, ')')

# genera data, master file
gendat <- gendat %>% 
  ungroup %>% 
  mutate(site = factor(site, levels = sitlev, labels = sitlab))

# genera by archea
arcdat <- gendat %>% 
  filter(domain %in% 'Archaea')

# genera by bacteria
bacdat <- gendat %>% 
  filter(domain %in% 'Bacteria')
@

<<clust1_arch, fig.cap = "Site clusters and ordinations of microbial genera by domain.  Colors indicate municipality and subscripts indicate distance categories from an outflow pipe at each site (`F' is farthest, `C' is closest, `I' is intermediate).  Clustering was based on a Bray-Curtis dissimilarity matrix of abundance data and sorting using the unweighted pair group method.  Ordinations were based on multi-dimensional scaling with two axes for the same data.  Abundance data were log-transformed prior to analysis. LACI: City of LA, SDCI: City of San Diego, LACO: LA County, ORCO: Orange County.", out.width = '\\textwidth', fig.height = 8, fig.width = 8, echo = F>>=
# vegan approach

doms <- c('Archaea', 'Bacteria')

# base ggplot 
pbase <- ggplot() +
  scale_y_continuous('Distance', limits = c(-0.05, 0.4)) +
  scale_colour_brewer(palette = "Set1") +
  theme(
    panel.background = element_blank(), 
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    panel.border = element_blank(),
    axis.text.x = element_blank(),
    axis.title.y = element_blank(),
    axis.title.x = element_blank(),
    axis.ticks.x = element_blank(),
    legend.position = 'top', 
    legend.title = element_blank(),
    legend.key = element_blank()
    )

lims <- list(
  Archaea = c(-0.35, 0.35),
  Bacteria = c(-0.2, 0.32)
)

for(dom in doms){

  # format 
  dat <- gendat[gendat$domain %in% dom, ]
  dat <- dplyr::select(dat, genus, site, wwtp, cont, abund)
  dat <- spread(dat, genus, abund, fill = 0) %>% 
    as.data.frame(stringAsFactors = F)
  row.names(dat) <- dat$site

  ##
  # clustering
  
  # clusts using all data
  # log transform for zeroes
  # create distance matrix
  datall <- dplyr::select(dat, -site, -wwtp, -cont) %>% 
    decostand(method = 'log') %>% 
    vegdist(method = 'bray') %>% 
    hclust(method = 'average')

  hcdata <- dendro_data(datall, type="rectangle")
  
  labs <- dplyr::select(dat, site, wwtp, cont)
  hcdata$labels <- merge(x = hcdata$labels, y = labs,  by.x = 'label', by.y = 'site')
  
  hcdata$labels$wwtp <- factor(hcdata$labels$wwtp, levels = c('LACI', 'SDCI', 'LACO', 'ORCO'), 
    labels = c('City of LA', 'City of San Diego', 'LA County', 'Orange County')
  )

  p <- pbase + 
    guides(color = guide_legend(title = 'Municipality')) +
    geom_segment(data=segment(hcdata), aes(x=x, y=y, xend=xend, yend=yend)) +
    geom_text(data = hcdata$labels, aes(x=x, y=y, label=label, colour = wwtp, hjust=0), size=4, parse = T, angle = 90, hjust = 1) + 
    ggtitle(toupper(dom)) + 
    theme(legend.position = 'none')

  assign(paste0('p', dom, 'cls'), p)
  
  ##
  # ordination
  ord <- dplyr::select(dat, -site, -wwtp, -cont) %>% 
    decostand(method = 'log') %>% 
    metaMDS(distance = 'bray', trace = 0, autotransform = F, k = 2)
  
  dat$wwtp <- factor(dat$wwtp, levels = c('LACI', 'SDCI', 'LACO', 'ORCO'), 
    labels = c('City of LA', 'City of San Diego', 'LA County', 'Orange County')
  )
  
  p <- ggord(ord, dat$wwtp, axes = c("1", "2"), arrow = NULL, txt = NULL, size = 4, obslab = T, ellipse = F, 
      hull = T, parse = T, poly = F, ellipse_pro = 0.95, alpha = 0.8) +
    scale_colour_brewer(palette = "Set1") +
    theme(
      legend.position = 'none', 
      axis.title.y = element_blank()
      ) + 
    scale_x_continuous('MDS1',limits = lims[[dom]])  +
    scale_y_continuous(limits = lims[[dom]])

  assign(paste0('p', dom, 'ord'), p)
  
}

# legend
p <- ggplot(dat, aes(x = wwtp, y = wwtp, colour = wwtp)) + 
  theme_minimal() +
  geom_point(pch = 15) + 
  theme(
    legend.position = 'top', 
    legend.title = element_blank()
  ) + 
  scale_colour_brewer(palette = 'Set1')
pleg <- g_legend(p)

# combine all
grid.arrange(
  arrangeGrob(pArchaeacls, pBacteriacls, ncol = 2, left = 'Distance'), 
  pleg,
  arrangeGrob(pArchaeaord, pBacteriaord, ncol = 2, left = 'MDS2'), 
  ncol = 1, 
  heights = c(1, 0.05, 1)
)

@

<<abundwwtp, fig.cap='Top ten genera by OTU abundance grouped by domain and municipality of wastewater treatment plants.', echo = F, fig.height = 9, fig.width = 8, out.width = '\\textwidth'>>=

# most abundant species, all sites
toplo1 <- gendat %>% 
  dplyr::select(domain, wwtp, genus, abund) %>% 
  group_by(domain, wwtp, genus) %>% 
  summarise(abund = sum(abund)) %>% 
  group_by(domain, wwtp) %>% 
  nest %>% 
  mutate(
    subdat = map(data, function(x){
      
    arrange(x, -abund) %>% 
        .[1:10, ]
      
    })
  ) %>% 
  dplyr::select(-data) %>% 
  unnest %>% 
  ungroup %>% 
  mutate(
    genord = stri_rand_strings(n = nrow(.), length = 9),
    genord = factor(genord, levels = genord),
    genus = gsub('_', ' ', genus)
  )

levels(toplo1$genord) <- toplo1$genus

p1 <- ggplot(toplo1, aes(x = genord, y = abund, fill = abund)) + 
  geom_bar(stat = 'identity', colour = 'black') + 
  ylab('Abundance') + 
  facet_wrap(wwtp ~ domain, ncol = 2, scales = 'free') + 
  theme_bw() + 
  scale_fill_gradientn(colours = brewer.pal(9, 'Blues')) +
  theme(legend.position = "none", 
    axis.title.y = element_blank(),
    axis.text.y = element_text(size = 6)
    )+ 
  coord_flip()
p1
@
\clearpage

<<abundcont, fig.cap='Top ten genera by OTU abundance grouped by approximate distance from wastewater treatment outflows.', echo = F, fig.height = 7, fig.width = 8, out.width = '\\textwidth'>>=

# most abundant species, all sites
toplo2 <- gendat %>% 
  dplyr::select(domain, cont, genus, abund) %>% 
  group_by(domain, cont, genus) %>% 
  summarise(abund = sum(abund)) %>% 
  group_by(domain, cont) %>% 
  nest %>% 
  mutate(
    subdat = map(data, function(x){
      
    arrange(x, -abund) %>% 
        .[1:10, ]
      
    })
  ) %>% 
  dplyr::select(-data) %>% 
  unnest %>% 
  ungroup %>% 
  mutate(
    genord = stri_rand_strings(n = nrow(.), length = 9),
    genord = factor(genord, levels = genord),
    genus = gsub('_', ' ', genus),
    cont = factor(cont, levels = c('clo', 'int', 'far'), labels = c('Close', 'Intermediate', 'Far'))
  )
levels(toplo2$genord) <- toplo2$genus

p2 <- ggplot(toplo2, aes(x = genord, y = abund, fill = abund)) + 
  geom_bar(stat = 'identity', colour = 'black') + 
  ylab('Abundance') + 
  facet_wrap(cont ~ domain, ncol = 2, scales = 'free') + 
  theme_bw() + 
  scale_fill_gradientn(colours = brewer.pal(9, 'Blues')) +
  theme(legend.position = "none", 
    axis.title.y = element_blank(),
    axis.text.y = element_text(size = 6)
    )+ 
  coord_flip()
p2
@
\clearpage

\clearpage
% ANOVA wwtp
<<boxdivwwtp, echo = F, message = F, warning = F, fig.height = 4, fig.width = 6, fig.cap = "Estimates of Fisher's alpha diversity for archaea and bacteria genera grouped by municipality of wastewater treatment plant. Alpha was was based on methods in Fisher et al. (1943) that measure diversity as a function of richness and abundance at a site.">>=

alph <- gendat %>% 
  dplyr::select(domain, site, genus, abund) %>% 
  group_by(domain) %>% 
  nest %>% 
  mutate(alph = map(data, function(x){
    
    out <- x %>% 
      spread(genus, abund) %>% 
      as.data.frame(stringsAsFactors = F)
    row.names(out) <- out$site
    out <- out %>% 
      dplyr::select(-site) %>% 
      fisher.alpha %>% 
      enframe(name = 'site', value = 'alph')
      
    return(out)
    
    })
  ) %>% 
  dplyr::select(-data) %>% 
  unnest %>% 
  mutate(
    wwtp = gsub('\\s.*$', '', site),
    cont = gsub('^.*\\s', '', site), 
    cont = gsub('[0-9]|\\[|\\]', '', cont), 
    cont = factor(cont, levels = c('C', 'I', 'F'), labels = c('Closest', 'Intermediate', 'Farthest'))
    )

# get anova mods
mods <- group_by(alph, domain) %>% 
  nest %>% 
  mutate(
    reswwtp = map(data, function(x){
      
      mod <- lm(alph ~ wwtp, data = x)
  
      return(mod)
      
    }), 
    rescont = map(data, function(x){
      
      mod <- lm(alph ~ cont, data = x)
  
      return(mod)
      
    })
  ) %>% 
  dplyr::select(-data)

pwwtp <- ggplot(alph, aes(x = wwtp, y = alph)) + 
  geom_boxplot() + 
  geom_jitter(width = 0.2, colour = 'darkgrey', size = 1, alpha = 0.6) + 
  facet_wrap(~ domain, scales = 'free_y', ncol = 1) + 
  theme_bw() +
  scale_x_discrete('Municipality') + 
  scale_y_continuous("Fisher's Alpha Diversity")
pwwtp

tab <- mtable(
  'Archaea' = mods[mods$domain %in% 'Archaea', ]$reswwtp[[1]],
  'Bacteria' = mods[mods$domain %in% 'Bacteria', ]$reswwtp[[1]],
  summary.stats = c('N', 'R-squared', 'F', 'p'), 
  digits = 3
)
tab
@

\clearpage
% alpha by pipe
<<boxdivcont, echo = F, message = F, warning = F, fig.height = 4, fig.width = 6,  fig.cap = "Estimates of Fisher's alpha diversity for archaea and bacteria genera grouped by approximate distance from wastewater outflow pipes. Alpha was was based on methods in Fisher et al. (1943) that measure diversity as a function of richness and abundance at a site.">>=
pcont <- ggplot(alph, aes(x = cont, y = alph)) + 
  geom_boxplot() + 
  geom_jitter(width = 0.2, colour = 'darkgrey', size = 1, alpha = 0.6) + 
  facet_wrap(~ domain, scales = 'free_y', ncol = 1) + 
  theme_bw() + 
  scale_x_discrete('Distance from outflow') + 
  scale_y_continuous("Fisher's Alpha Diversity")
pcont
tab <- mtable(
  'Archaea' = mods[mods$domain %in% 'Archaea', ]$rescont[[1]],
  'Bacteria' = mods[mods$domain %in% 'Bacteria', ]$rescont[[1]],
  summary.stats = c('N', 'R-squared', 'F', 'p'), 
  digits = 3
)
tab
@

\end{document}